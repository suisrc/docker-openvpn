#!/bin/bash

# ENV VPN_TYPE= openvpn\

clean_skip_ips() {
  if [[ -n "$SKIPPED_IPS" ]]; then
      # echo "skipped ips: $SKIPPED_IPS"
      default_gw=$(ip route show | grep via | head -n 1 | awk '{print $3}')
      IFS=',' read -ra skip_ips <<< "$SKIPPED_IPS"
      set +e
      for skip_ip in "${skip_ips[@]}"; do
          echo "[-] ip route del $skip_ip via $default_gw"
          ip route del $skip_ip via $default_gw
      done
      set -e
  fi
}

if [[ $VPN_TYPE == *openvpn ]]; then
    echo "cleaning openvpn..."
    # clean_skip_ips
    echo "[vpn-stop] kill -9 \$(pgrep openvpn)"
    kill -9 "$(pgrep openvpn)"
elif [[ $VPN_TYPE == *wireguard ]]; then
    echo "cleaning wireguard..."
    clean_skip_ips
    echo "[vpn-stop] wg-quick down wg0"
    wg-quick down wg0
else 
    echo "[vpn-stop] unknown vpn: $VPN_TYPE"
fi

if [[ -n "$EXIT_SHELL" ]]; then
  echo "[vpn-stop] exit shell: $EXIT_SHELL"
  eval "$EXIT_SHELL"
fi

# 执行重启相关内容， 只有在 VPN_WAIT="none" 有效
if [[ "$1" == "-r" && "$HEALTH_SHELL"=="none" ]]; then
  echo "[vpn-stop] restart vpn..."
  # 动态修改VPN所在区域， 用于重启时切换区域
  if [[ -n $2 ]]; then export VPN_REGION="$2"; fi
  exec vpn-entry
elif [[ -e /pause ]]; then
  echo "[vpn-stop] stop vpn by fifo..."
  # 向管道写入 stop 会触发终止中断
  echo "stop" >/pause
else
  echo "[vpn-stop] stop vpn..."
fi

# VPN_TYPE=surfshark-openvpn bash ./bin/vpn-stop