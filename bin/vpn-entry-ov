#!/bin/bash


# ENV SOCKS5="off" \ 
#     VPN_KEY=a01 \
#     VPN_REGION= \
#     SKIPPED_IPS= \
#     OV_USER_PASS= \
#     OV_CONF_PATH= \
#     OV_CONF_SHELL= \
#     OV_CONF_SHEND= \
#     SUCC_SHELL= \
#     EXIT_SHELL= \
#     HEALTH_SHELL= \
#     HEALTH_URI= \
#     TESTIP_URI=

set -o errexit
set -o nounset
set -o pipefail

# 执行配置脚本，在启动前执行
if [[ -n $OV_CONF_SHELL ]]; then
    echo "create openvpn conf by shell: $OV_CONF_SHELL"
    eval "$OV_CONF_SHELL"
fi

# 通过网络获取私钥
if  [[ $OV_USER_PASS =~ ^http(s)?:// ]]; then
    echo "get openvpn user-password form internet..."
    export OV_USER_PASS=$(curl -ksSL "$WG_PRIVATE_KEY")
fi
# OpenVPN OV_USER_PASS include ":", is user:pass, wirte to file
if [[ $OV_USER_PASS == *:* ]]; then
    echo "$OV_USER_PASS" | tr ':' '\n' > /vpn/auth.txt
    OV_USER_PASS=/vpn/auth.txt
fi
# check OpenVPN auth file.
if [[ ! -f $OV_USER_PASS ]]; then
    echo "openvpn auth file not found: $OV_USER_PASS"
    exit 1
fi

# if file is prefix http, download it.
if [[ $OV_CONF_PATH =~ ^http(s)?:// ]]; then
    echo "downloading openvpn conf file: $OV_CONF_PATH"
    curl -ksSL "$OV_CONF_PATH" -o /vpn/openvpn.conf
    OV_CONF_PATH=/vpn/openvpn.conf
fi
if [[ -z "$OV_CONF_PATH" ]]; then
    OV_CONF_PATH=/vpn/openvpn.conf
fi
# check OpenVPN conf file.
if [[ ! -f "$OV_CONF_PATH" ]]; then
    echo "openvpn conf file not found: $OV_CONF_PATH"
    exit 1
fi

# 处理 SKIPPED_IPS
if [[ -n "$SKIPPED_IPS" ]]; then
    echo "using openvpn skip ips: $SKIPPED_IPS"
    echo "$SKIPPED_IPS" | tr ',' '\n' | while read -r line; do
        if [[ $line == */* ]]; then
            # ip/mask => ip mask
            ip=${line%/*}
            mk=${line#*/}
            mk0=$(( (1 << (32 - $mk)) - 1 ))
            mk1=$((mk0 >> 24 & 0xff ^ 0xff))
            mk2=$((mk0 >> 16 & 0xff ^ 0xff))
            mk3=$((mk0 >> 8  & 0xff ^ 0xff))
            mk4=$((mk0 & 0xff ^ 0xff))
            line="$ip $mk1.$mk2.$mk3.$mk4"
        fi
        echo "route $line net_gateway" >> "$OV_CONF_PATH"
    done
fi
# echo "test success: $OV_CONF_PATH" && exit 0

# 修复配置脚本，在启动前执行
if [[ -n $OV_CONF_SHEND ]]; then
    echo "fix openvpn conf by shell: $OV_CONF_SHEND"
    eval "$OV_CONF_SHEND"
fi

# 打印启动使用的配置
echo "using openvpn conf file: $OV_CONF_PATH"
echo "using openvpn auth file: $OV_USER_PASS"

# OpenVPN Running.
mkdir -p /vpn/log
openvpn --config "$OV_CONF_PATH" "--auth-user-pass" "$OV_USER_PASS" &
openvpn_pid=$!

# 显示连接状况
while [[ ! -e /sys/class/net/tun0 ]]; do
    sleep 2 # 等待tun0出现，如果没有出现，说明openvpn启动失败
    if ! kill -0 "$openvpn_pid" 2>/dev/null; then
        echo "openvpn process not found, openvpn start failed."
        exit 1
    fi
done
echo "" && echo "tun0 is installed"

# trap 'vpn-stop' TERM
# wait $openvpn_pid
#=========================================================
# 脚本启动成功后执行的内容
vpn-poststart openvpn
# 等待进程完成
openvpn_pid=$openvpn_pid vpn-wait
