#!/bin/bash

## 在命令行中不能使用">"特殊符号，使用"-"代替
## bash p2p.sh add 51280UDP-127.0.0.1:8080
## bash p2p.sh del 51280UDP-127.0.0.1:8080
## 使用 iptable 进行端口转发， 实际测试效率不及 nginx， 
## 而且不能运行在hostNetowrk中，但是胜在方便，本机转发效率高

set -e

if [[ $1 != "add" && $1 != "del" || $2 == "" ]]; then
    echo "Usage: $0 add|del src[UDP]>dest"
    exit 1
fi

action=$1
src_dest=$2

# src:dest, 端口重定向 80>8080 443UDP>127.0.0.1:8443, 默认不写是TCP，必须大写
IFS="-" read -r src_port dest <<< "${src_dest}"
# 如果src_port不存在，跳过处理
if [ -z "${src_port}" ]; then
    echo "src_port is empty"
    exit 1
fi
dest_proto="TCP"
# 如果src_port又后缀UDP或者TCP，删除后缀,只保留端口部分的内容
if echo ${src_port} | grep -Eq "UDP$"; then
  dest_proto="UDP"
  src_port=$(echo ${src_port} | sed 's/UDP$//g')
elif echo ${src_port} | grep -Eq "TCP$"; then
  src_port=$(echo ${src_port} | sed 's/TCP$//g')
fi
dest_ip="127.0.0.1"
dest_port=${src_port}
# 如果dest存在, 如果存在":"，即指定了ip和port，如果存在"."，即指定了ip，否则指定了port
if echo ${dest} | grep -Eq ":"; then
    IFS=":" read -r dest_ip dest_port <<< "${dest}" # IP:PORT
elif echo ${dest} | grep -Eq "\."; then
    dest_ip=${dest} # Only IP
else
    dest_port=${dest} # Only PORT
fi

# iptables -t nat -C POSTROUTING -d 127.0.0.1/32 -p UDP -j MASQUERADE
if [[ $action == "add" ]]; then
    # 判定需要转发的规则的洞口是否被占用
    iptables -t nat -C PREROUTING ! -s ${dest_ip}/32 -p ${dest_proto} --dport ${src_port} -j DNAT --to ${dest_ip}:${dest_port} 2>/dev/null \
    && echo "port ${src_port} is already used!" && iptables -t nat -L | grep dpt:${src_port} && exit 1
    # 执行转发规则增加
    echo "add port ${src_port}/${dest_proto} to ${dest_ip}:${dest_port}"
    set -x
    iptables -t nat -I PREROUTING ! -s ${dest_ip}/32 -p ${dest_proto} --dport ${src_port} -j DNAT --to ${dest_ip}:${dest_port}
    iptables -t nat -I POSTROUTING -d ${dest_ip}/32 -p ${dest_proto} -j MASQUERADE
else
    # 执行转发规则删除
    echo "del port ${src_port}/${dest_proto} to ${dest_ip}:${dest_port}"
    set -x
    iptables -t nat -D PREROUTING ! -s ${dest_ip}/32 -p ${dest_proto} --dport ${src_port} -j DNAT --to ${dest_ip}:${dest_port}
    iptables -t nat -D POSTROUTING -d ${dest_ip}/32 -p ${dest_proto} -j MASQUERADE
fi

